/*
 * Autor: Lucas Costa Fuganti
 * V360 - ToDo List
 */
package View;

import Controller.DAO;
import Controller.JDBCUtil;
import Model.Item;
import Model.Lista;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas
 */
public class Main extends javax.swing.JFrame {

    DAO dao = new DAO();
    JDBCUtil jdbc = new JDBCUtil();
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        dao.CriaConexao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneListas = new javax.swing.JScrollPane();
        jListListas = new javax.swing.JList<>();
        jScrollPaneItems = new javax.swing.JScrollPane();
        jListItems = new javax.swing.JList<>();
        jLabelListas = new javax.swing.JLabel();
        jLabelItems = new javax.swing.JLabel();
        jButtonCriarLista = new javax.swing.JButton();
        jButtonEditarLista = new javax.swing.JButton();
        jButtonExcluirLista = new javax.swing.JButton();
        jButtonCriarItem = new javax.swing.JButton();
        jButtonEditarItem = new javax.swing.JButton();
        jButtonExcluirItem = new javax.swing.JButton();
        jTextFieldLista = new javax.swing.JTextField();
        jTextFieldItem = new javax.swing.JTextField();
        jLabelNomeLista = new javax.swing.JLabel();
        jLabelDescItem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ToDo List");
        setBackground(new java.awt.Color(102, 0, 153));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jListListas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneListas.setViewportView(jListListas);

        jListItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneItems.setViewportView(jListItems);

        jLabelListas.setText("Listas");

        jLabelItems.setText("Items");

        jButtonCriarLista.setText("Nova Lista");
        jButtonCriarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarListaActionPerformed(evt);
            }
        });

        jButtonEditarLista.setText("Editar");
        jButtonEditarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarListaActionPerformed(evt);
            }
        });

        jButtonExcluirLista.setText("Excluir Lista");
        jButtonExcluirLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirListaActionPerformed(evt);
            }
        });

        jButtonCriarItem.setText("Novo Item");
        jButtonCriarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarItemActionPerformed(evt);
            }
        });

        jButtonEditarItem.setText("Editar");
        jButtonEditarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarItemActionPerformed(evt);
            }
        });

        jButtonExcluirItem.setText("Excluir Item");
        jButtonExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirItemActionPerformed(evt);
            }
        });

        jTextFieldLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldListaKeyReleased(evt);
            }
        });

        jTextFieldItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldItemKeyReleased(evt);
            }
        });

        jLabelNomeLista.setText("Nome da Lista");

        jLabelDescItem.setText("Descrição do Item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCriarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonExcluirLista)
                                    .addComponent(jButtonEditarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(98, 98, 98)
                                    .addComponent(jLabelListas))
                                .addComponent(jScrollPaneListas, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNomeLista)
                            .addComponent(jTextFieldLista, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonCriarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(66, 66, 66)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonExcluirItem)
                                .addComponent(jButtonEditarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneItems, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelItems)
                                .addGap(114, 114, 114))))
                    .addComponent(jTextFieldItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDescItem))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(146, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelListas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneListas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelItems)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomeLista)
                    .addComponent(jLabelDescItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCriarLista)
                            .addComponent(jButtonEditarLista)
                            .addComponent(jButtonCriarItem))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonExcluirLista))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonEditarItem)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonExcluirItem)))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCriarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarListaActionPerformed
        DefaultListModel<String> listas = new DefaultListModel<>();
        try {
            if(!jTextFieldLista.getText().equals("")) {
                if(dao.inserir(new Lista(jTextFieldLista.getText()))) {
                    limpaCampoLista();
                    dao.consultarTodos(dao.getPropLista());
                    preencherListas(listas);
                    JOptionPane.showMessageDialog(this,
                                "Nova lista criada com sucesso!",
                                "Lista criada",
                                JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "Ocorreu um erro ao registrar a lista no banco de dados.",
                            "Erro de criação",
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                            "Lista não criada: a lista deve ter um nome.",
                            "Campo não preenchido",
                            JOptionPane.ERROR_MESSAGE);
                jTextFieldLista.requestFocus();
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this,
                "Ocorreu um erro ao tentar criar a lista. Por favor, tente novamente.",
                "Ocorreu um erro",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCriarListaActionPerformed

    private void jButtonEditarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarListaActionPerformed
        DefaultListModel<String> listas = new DefaultListModel<>();
        if(jListListas.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this,
                        "Dados não atualizados: favor selecionar a lista a ser alterada.",
                        "Falha de atualização",
                        JOptionPane.ERROR_MESSAGE);
        } else if(jTextFieldLista.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                        "Lista não alterada: a lista deve ter um nome.",
                        "Campo não preenchido",
                        JOptionPane.ERROR_MESSAGE);
                jTextFieldLista.requestFocus();
        } else {
            try {
                int index = Integer.parseInt(jListListas.getSelectedValue().substring(0, jListListas.getSelectedValue().indexOf(" ")));
                dao.alterar(new Lista(index, jTextFieldLista.getText()));
                jListListas.getSelectionModel().clearSelection();
                limpaCampoLista();
                dao.consultarTodos(dao.getPropLista());
                preencherListas(listas);
                JOptionPane.showMessageDialog(this,
                                "Lista atualizada com sucesso!",
                                "Atualização concluída",
                                JOptionPane.INFORMATION_MESSAGE);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this,
                "Ocorreu um erro ao tentar alterar a lista. Por favor, tente novamente.",
                "Ocorreu um erro",
                JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonEditarListaActionPerformed

    private void jButtonExcluirListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirListaActionPerformed
        DefaultListModel<String> listas = new DefaultListModel<>();
        if(jListListas.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this,
                        "Nenhuma lista excluída: favor selecionar a lista a ser alterada.",
                        "Falha ao excluir",
                        JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                int index = Integer.parseInt(jListListas.getSelectedValue().substring(0, jListListas.getSelectedValue().indexOf(" ")));
                dao.excluir(index, dao.getPropLista());
                jListListas.getSelectionModel().clearSelection();
                limpaCampoLista();
                dao.consultarTodos(dao.getPropLista());
                preencherListas(listas);
                JOptionPane.showMessageDialog(this,
                                "Lista Excluída com sucesso!",
                                "Lista Excluída",
                                JOptionPane.INFORMATION_MESSAGE);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this,
                            "Ocorreu um erro ao tentar excluir a lista. Por favor, tente novamente.",
                            "Ocorreu um erro",
                            JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonExcluirListaActionPerformed

    private void jButtonCriarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarItemActionPerformed
        DefaultListModel<String> items = new DefaultListModel<>();
        try {
            if(!jListListas.getSelectionModel().isSelectionEmpty()) {
                if(!jTextFieldItem.getText().equals("")) {
                    if(dao.inserir(new Item(
                            Integer.parseInt(jListListas.getSelectedValue().substring(0, jListListas.getSelectedValue().indexOf(" "))),
                            jTextFieldItem.getText()
                    ))) {
                        limpaCampoItem();
                        dao.consultarTodos(dao.getPropItem());
                        preencherItems(items);
                        JOptionPane.showMessageDialog(this,
                                "Novo item criado com sucesso!",
                                "Item criado",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Ocorreu um erro ao registrar o item no banco de dados.",
                                "Erro de criação",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                                    "Item não criado: o item deve ter uma descrição.",
                                    "Campo não preenchido",
                                    JOptionPane.ERROR_MESSAGE);
                    jTextFieldItem.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(this,
                            "Nenhuma lista está selecionada. Por favor, selecione uma lista para criar um item.",
                            "Lista não selecionada",
                            JOptionPane.ERROR_MESSAGE);
            }
        } catch(Exception e) {
                JOptionPane.showMessageDialog(this,
                            "Ocorreu um erro ao tentar criar o item. Por favor, tente novamente.",
                            "Ocorreu um erro",
                            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCriarItemActionPerformed

    private void jButtonEditarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEditarItemActionPerformed

    private void jButtonExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExcluirItemActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultListModel<String> listas = new DefaultListModel<>();
        dao.consultarTodos(dao.getPropLista());
        preencherListas(listas);
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldListaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldListaKeyReleased
        if(jListListas.getSelectionModel().isSelectionEmpty() && dao.consultarEspecifico(new Lista(jTextFieldLista.getText()))) {
            DefaultListModel<String> listas = new DefaultListModel<>();
            preencherListas(listas);
        }
    }//GEN-LAST:event_jTextFieldListaKeyReleased

    private void jTextFieldItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldItemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldItemKeyReleased

    // Métodos para limpar os campos de entrada de texto
    private void limpaCampoLista() {
        jTextFieldLista.setText("");
    }
    
    private void limpaCampoItem() {
        jTextFieldItem.setText("");
    }
    
    private void preencherListas(DefaultListModel<String> modelo) {
        try {
            ResultSet rs = dao.getResultSet();
            DefaultListModel<String> lista = modelo;
            lista.removeAllElements();
            while(rs != null && rs.next()) {
                lista.addElement(rs.getInt(1) + " - " + rs.getString(2));
            }
            jListListas.setModel(modelo);
        } catch(SQLException e) {
            JOptionPane.showMessageDialog(this,
                        "Ocorreu um erro ao popular a lista com os elementos armazenados no Banco de Dados.",
                        "Falha de Banco de Dados",
                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void preencherItems(DefaultListModel<String> modelo) {
        try {
            ResultSet rs = dao.getResultSet();
            DefaultListModel<String> items = modelo;
            items.removeAllElements();
            while(rs != null && rs.next()) {
                items.addElement(rs.getInt(1) + " - " + rs.getString(2));
            }
            jListItems.setModel(modelo);
        } catch(SQLException e) {
            JOptionPane.showMessageDialog(this,
                        "Ocorreu um erro ao popular a lista com os elementos armazenados no Banco de Dados.",
                        "Falha de Banco de Dados",
                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCriarItem;
    private javax.swing.JButton jButtonCriarLista;
    private javax.swing.JButton jButtonEditarItem;
    private javax.swing.JButton jButtonEditarLista;
    private javax.swing.JButton jButtonExcluirItem;
    private javax.swing.JButton jButtonExcluirLista;
    private javax.swing.JLabel jLabelDescItem;
    private javax.swing.JLabel jLabelItems;
    private javax.swing.JLabel jLabelListas;
    private javax.swing.JLabel jLabelNomeLista;
    private javax.swing.JList<String> jListItems;
    private javax.swing.JList<String> jListListas;
    private javax.swing.JScrollPane jScrollPaneItems;
    private javax.swing.JScrollPane jScrollPaneListas;
    private javax.swing.JTextField jTextFieldItem;
    private javax.swing.JTextField jTextFieldLista;
    // End of variables declaration//GEN-END:variables
}
